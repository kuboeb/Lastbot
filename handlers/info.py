from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
import random
import logging

from keyboards.keyboards import (
    get_faq_apply_keyboard,
    get_reviews_navigation_keyboard,
    get_share_referral_keyboard,
    get_main_menu_new_user
)
from utils import messages
from database import db_manager, Application, Referral

router = Router()
logger = logging.getLogger(__name__)

# –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
REVIEWS = [
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–ó–∞ 2 –º–µ—Å—è—Ü–∞ —è –Ω–∞—É—á–∏–ª—Å—è –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å 800‚Ç¨ –≤ –º–µ—Å—è—Ü –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ. –û—Ç–ª–∏—á–Ω—ã–π –∫—É—Ä—Å!" - –ê–Ω–¥—Ä–µ–π, –ì–µ—Ä–º–∞–Ω–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ –ø–æ–Ω—è—Ç–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –≤–µ—â–µ–π. –£–∂–µ –æ–∫—É–ø–∏–ª–∞ –≤—Ä–µ–º—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ!" - –ú–∞—Ä–∏—è, –ò—Å–ø–∞–Ω–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–õ–∏—á–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ - —ç—Ç–æ –æ–≥—Ä–æ–º–Ω—ã–π –ø–ª—é—Å. –í—Å–µ–≥–¥–∞ –ø–æ–º–æ–≥–∞–ª –∏ –æ—Ç–≤–µ—á–∞–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã" - –î–º–∏—Ç—Ä–∏–π, –ò—Ç–∞–ª–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–ù–∞—á–∞–ª —Å –Ω—É–ª—è, —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è—é –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º –≤ 5000‚Ç¨. –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–Ω–∞–Ω–∏—è!" - –°–µ—Ä–≥–µ–π, –§—Ä–∞–Ω—Ü–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–ö—É—Ä—Å –∏–∑–º–µ–Ω–∏–ª –º–æ—é –∂–∏–∑–Ω—å! –£–≤–æ–ª–∏–ª–∞—Å—å —Å –Ω–µ–ª—é–±–∏–º–æ–π —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ 4 –º–µ—Å—è—Ü–∞" - –ï–ª–µ–Ω–∞, –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–û—á–µ–Ω—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥–∞—á–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –í—Å—ë –ø–æ –ø–æ–ª–æ—á–∫–∞–º!" - –í–∏–∫—Ç–æ—Ä, –ë–µ–ª—å–≥–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–†–µ–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é 1200‚Ç¨/–º–µ—Å—è—Ü" - –û–ª—å–≥–∞, –ê–≤—Å—Ç—Ä–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–õ—É—á—à–µ–µ –≤–ª–æ–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏! –û–∫—É–ø–∏–ª –æ–±—É—á–µ–Ω–∏–µ –∑–∞ –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü" - –ü–∞–≤–µ–ª, –®–≤–µ—Ü–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ - –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø—Ä–æ—Ñ–∏. –û–±—ä—è—Å–Ω—è—é—Ç —Ç–∞–∫, —á—Ç–æ –ø–æ–π–º–µ—Ç –∫–∞–∂–¥—ã–π" - –ê–Ω–Ω–∞, –ü–æ–ª—å—à–∞',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–ë–ª–∞–≥–æ–¥–∞—Ä—è –∫—É—Ä—Å—É —Å–æ–∑–¥–∞–ª –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ 600‚Ç¨ –≤ –º–µ—Å—è—Ü" - –ò–≥–æ—Ä—å, –ß–µ—Ö–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–°—É–ø–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∞! –ù–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–∞—é—Ç –±—ã—Å—Ç—Ä–æ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ" - –ù–∞—Ç–∞–ª—å—è, –ü–æ—Ä—Ç—É–≥–∞–ª–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–¢–µ–ø–µ—Ä—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ - –º–æ–π –æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞" - –ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –ì—Ä–µ—Ü–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–ñ–∞–ª–µ—é —Ç–æ–ª—å–∫–æ –æ–± –æ–¥–Ω–æ–º - —á—Ç–æ –Ω–µ –Ω–∞—á–∞–ª —Ä–∞–Ω—å—à–µ!" - –ú–∏—Ö–∞–∏–ª, –î–∞–Ω–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–û—Ç —Å—Ç—Ä–∞—Ö–∞ –ø–µ—Ä–µ–¥ –∫—Ä–∏–ø—Ç–æ–π –¥–æ —É–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ —Ç—Ä–µ–π–¥–µ—Ä–∞ –∑–∞ 2 –º–µ—Å—è—Ü–∞" - –¢–∞—Ç—å—è–Ω–∞, –§–∏–Ω–ª—è–Ω–¥–∏—è',
    '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"–ö—É—Ä—Å —Å—Ç–æ–∏—Ç –∫–∞–∂–¥–æ–π –º–∏–Ω—É—Ç—ã! –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º –¥—Ä—É–∑—å—è–º" - –í–ª–∞–¥–∏–º–∏—Ä, –õ—é–∫—Å–µ–º–±—É—Ä–≥',
]

@router.callback_query(F.data == "program")
@router.message(Command("program"))
async def show_program(update: Message | CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞"""
    if isinstance(update, CallbackQuery):
        await update.message.answer(messages.PROGRAM)
        await update.answer()
    else:
        await update.answer(messages.PROGRAM)

@router.callback_query(F.data == "faq")
async def show_faq(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å FAQ"""
    await callback.message.answer(
        messages.FAQ,
        reply_markup=get_faq_apply_keyboard()
    )
    await callback.answer()

@router.callback_query(F.data == "why_crypto")
async def show_why_crypto(callback: CallbackQuery):
    """–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –∏–∑—É—á–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã"""
    text = """üíé –ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –∏–∑—É—á–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:

üìà –†–∞—Å—Ç—É—â–∏–π —Ä—ã–Ω–æ–∫ - –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –±–æ–ª–µ–µ $2 —Ç—Ä–ª–Ω
üåç –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ - —Ä–∞–±–æ—Ç–∞ –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –º–∏—Ä–∞
üí∞ –í—ã—Å–æ–∫–∏–π –¥–æ—Ö–æ–¥ - –æ—Ç 500‚Ç¨ –≤ –º–µ—Å—è—Ü –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö
üîÆ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –±—É–¥—É—â–µ–≥–æ - –±–ª–æ–∫—á–µ–π–Ω –º–µ–Ω—è–µ—Ç –º–∏—Ä
üõ°Ô∏è –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å - –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –ø–æ–¥ –≤–∞—à–∏–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º
üöÄ –†–∞–Ω–Ω–µ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ - –º—ã –µ—â–µ –≤ –Ω–∞—á–∞–ª–µ –ø—É—Ç–∏

–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Ä–µ–≤–æ–ª—é—Ü–∏–∏!"""
    
    await callback.message.answer(text)
    await callback.answer()

@router.callback_query(F.data == "success_stories")
async def show_success_stories(callback: CallbackQuery):
    """–ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞"""
    text = """‚≠ê –ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ –Ω–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤:

üöÄ **–ê–ª–µ–∫—Å–∞–Ω–¥—Ä (–ü–æ–ª—å—à–∞)**: –û—Ç 0 –¥–æ 1500‚Ç¨/–º–µ—Å—è—Ü –∑–∞ 3 –º–µ—Å—è—Ü–∞
"–ù–∞—á–∞–ª –±–µ–∑ –∑–Ω–∞–Ω–∏–π, —Å–µ–π—á–∞—Å –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –¥—Ä—É–∑–µ–π –ø–æ –∫—Ä–∏–ø—Ç–µ"

üöÄ **–ï–ª–µ–Ω–∞ (–ß–µ—Ö–∏—è)**: –°–æ–∑–¥–∞–ª–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞ 10000‚Ç¨ —Å 500‚Ç¨
"–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è - —ç—Ç–æ –≤—Å—ë. –°–ø–∞—Å–∏–±–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫—É!"

üöÄ **–ò–≥–æ—Ä—å (–ì–µ—Ä–º–∞–Ω–∏—è)**: –£–≤–æ–ª–∏–ª—Å—è —Å —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ –ø–æ–ª–≥–æ–¥–∞
"–¢–µ–ø–µ—Ä—å –∑–∞–Ω–∏–º–∞—é—Å—å —Ç–æ–ª—å–∫–æ –∫—Ä–∏–ø—Ç–æ–π –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤—É—é"

üöÄ **–û–ª—å–≥–∞ (–§—Ä–∞–Ω—Ü–∏—è)**: –ó–∞–ø—É—Å—Ç–∏–ª–∞ —Å–≤–æ–π –∫—Ä–∏–ø—Ç–æ-–±–ª–æ–≥
"–ö—É—Ä—Å –¥–∞–ª –Ω–µ —Ç–æ–ª—å–∫–æ –∑–Ω–∞–Ω–∏—è, –Ω–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ"

üöÄ **–ú–∏—Ö–∞–∏–ª (–ò—Å–ø–∞–Ω–∏—è)**: –û—Ç —Å–∫–µ–ø—Ç–∏–∫–∞ –¥–æ —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–∞
"–î—É–º–∞–ª —ç—Ç–æ —Å–ª–æ–∂–Ω–æ, –æ–∫–∞–∑–∞–ª–æ—Å—å - –ø—Ä–æ—â–µ —á–µ–º –∫–∞–∂–µ—Ç—Å—è"

–°–ª–µ–¥—É—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞ - –≤–∞—à–∞! üí™"""
    
    await callback.message.answer(text)
    await callback.answer()

@router.callback_query(F.data == "reviews")
@router.message(Command("reviews"))
async def show_reviews(update: Message | CallbackQuery, page: int = 1):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∑—ã–≤—ã"""
    reviews_per_page = 3
    total_pages = len(REVIEWS) // reviews_per_page
    
    start_idx = (page - 1) * reviews_per_page
    end_idx = start_idx + reviews_per_page
    
    current_reviews = REVIEWS[start_idx:end_idx]
    
    text = "üí¨ –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤:\n\n" + "\n\n".join(current_reviews)
    
    if isinstance(update, CallbackQuery):
        await update.message.answer(
            text,
            reply_markup=get_reviews_navigation_keyboard(page, total_pages)
        )
        await update.answer()
    else:
        await update.answer(
            text,
            reply_markup=get_reviews_navigation_keyboard(page, total_pages)
        )

@router.callback_query(F.data.startswith("reviews_page_"))
async def navigate_reviews(callback: CallbackQuery):
    """–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –æ—Ç–∑—ã–≤–∞–º"""
    page = int(callback.data.split("_")[2])
    
    reviews_per_page = 3
    total_pages = len(REVIEWS) // reviews_per_page
    
    start_idx = (page - 1) * reviews_per_page
    end_idx = start_idx + reviews_per_page
    
    current_reviews = REVIEWS[start_idx:end_idx]
    
    text = "üí¨ –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤:\n\n" + "\n\n".join(current_reviews)
    
    await callback.message.edit_text(
        text,
        reply_markup=get_reviews_navigation_keyboard(page, total_pages)
    )
    await callback.answer()

@router.callback_query(F.data == "referral")
async def show_referral_info(callback: CallbackQuery):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
    user_id = callback.from_user.id
    
    async with db_manager.get_session() as session:
        application = await session.query(Application).filter_by(user_id=user_id).first()
        
        if not application:
            await callback.message.answer(
                "‚ùå –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∫—É—Ä—Å!",
                reply_markup=get_main_menu_new_user()
            )
            await callback.answer()
            return
        
        # –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        referrals = await session.query(Referral).filter_by(referrer_id=user_id).all()
        referrals_count = len(referrals)
        
        # TODO: –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–∏–≤—à–∏—Ö 50% –∫—É—Ä—Å–∞
        completed_count = 0
        earned = completed_count * 50
        pending = (referrals_count - completed_count) * 50
    
    bot_username = (await callback.bot.get_me()).username
    referral_link = f"https://t.me/{bot_username}?start=ref{user_id}"
    
    text = f"""üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 50‚Ç¨ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞!

–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
1Ô∏è‚É£ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–µ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
2Ô∏è‚É£ –î—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –∫—É—Ä—Å –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ
3Ô∏è‚É£ –ö–æ–≥–¥–∞ –¥—Ä—É–≥ –ø—Ä–æ–π–¥–µ—Ç 50% –∫—É—Ä—Å–∞, –≤—ã –æ–±–∞ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ 50‚Ç¨

–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:
{referral_link}

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {referrals_count}
–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {earned}‚Ç¨

–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üì≤"""
    
    await callback.message.answer(
        text,
        reply_markup=get_share_referral_keyboard(referral_link)
    )
    await callback.answer()

@router.callback_query(F.data == "my_referrals")
async def show_my_referrals(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    user_id = callback.from_user.id
    
    async with db_manager.get_session() as session:
        # –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        referrals = await session.query(Referral).filter_by(referrer_id=user_id).all()
        referrals_count = len(referrals)
        
        # TODO: –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–∏–≤—à–∏—Ö 50% –∫—É—Ä—Å–∞
        completed_count = 0
        earned = completed_count * 50
        pending = (referrals_count - completed_count) * 50
    
    bot_username = (await callback.bot.get_me()).username
    referral_link = f"https://t.me/{bot_username}?start=ref{user_id}"
    
    text = f"""üìä –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {referrals_count}
‚úÖ –ó–∞–≤–µ—Ä—à–∏–ª–∏ 50% –∫—É—Ä—Å–∞: {completed_count}
üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {earned}‚Ç¨
‚è≥ –û–∂–∏–¥–∞–µ—Ç—Å—è: {pending}‚Ç¨

–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
{referral_link}

üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π"""
    
    await callback.message.answer(
        text,
        reply_markup=get_share_referral_keyboard(referral_link)
    )
    await callback.answer()

@router.callback_query(F.data == "copy_referral")
async def copy_referral_hint(callback: CallbackQuery):
    """–ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏"""
    await callback.answer(
        "üìã –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è",
        show_alert=True
    )

@router.callback_query(F.data == "noop")
async def noop_handler(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –±–µ–∑ –¥–µ–π—Å—Ç–≤–∏—è"""
    await callback.answer()

@router.message(Command("ref"))
async def cmd_referral(message: Message):
    """–ë—ã—Å—Ç—Ä–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏"""
    user_id = message.from_user.id
    
    async with db_manager.get_session() as session:
        application = await session.query(Application).filter_by(user_id=user_id).first()
        
        if not application:
            await message.answer(
                "‚ùå –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∫—É—Ä—Å!"
            )
            return
    
    bot_username = (await message.bot.get_me()).username
    referral_link = f"https://t.me/{bot_username}?start=ref{user_id}"
    
    await message.answer(
        f"üí∞ –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{referral_link}\n\n"
        f"–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ 50‚Ç¨!",
        reply_markup=get_share_referral_keyboard(referral_link)
    )
