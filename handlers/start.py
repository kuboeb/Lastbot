from sqlalchemy import select
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
import re
import logging

from database import db_manager, BotUser, Application, TrafficSource, Referral, UserAction
from keyboards.keyboards import (
    get_main_menu_new_user, 
    get_main_menu_existing_user,
    get_reply_keyboard_new_user,
    get_reply_keyboard_existing_user
)
from utils import messages
from config import config

router = Router()
logger = logging.getLogger(__name__)

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    username = message.from_user.username
    
    # –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥—ã start
    args = message.text.split()
    referrer_id = None
    source_code = None
    
    if len(args) > 1:
        param = args[1]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        if param.startswith('ref'):
            match = re.match(r'ref(\d+)', param)
            if match:
                referrer_id = int(match.group(1))
                logger.info(f"User {user_id} came from referral {referrer_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–∞—Ñ–∏–∫–∞
        elif param.startswith('src_'):
            source_code = param[4:]
            logger.info(f"User {user_id} came from source {source_code}")
    
    async with db_manager.get_session() as session:
        user = (await session.execute(select(BotUser).where(BotUser.user_id == user_id))).scalar_one_or_none()
        user = (await session.execute(select(BotUser).where(BotUser.user_id == user_id))).scalar_one_or_none()
        
        if not user:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = BotUser(
                user_id=user_id,
                username=username
            )
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–∞—Ñ–∏–∫–∞, –Ω–∞—Ö–æ–¥–∏–º –µ–≥–æ
            if source_code:
                source = await session.query(TrafficSource).filter_by(
                    tracking_code=source_code,
                    is_active=True
                ).first()
                if source:
                    user.source_id = source.id
            
            session.add(user)
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–µ—Ä, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
            if referrer_id and referrer_id != user_id:
                referral = Referral(
                    referrer_id=referrer_id,
                    referred_id=user_id
                )
                session.add(referral)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
                await message.bot.send_message(
                    referrer_id,
                    f"üéâ –ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!"
                )
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        action = UserAction(user_id=user_id, action="start")
        session.add(action)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        user.last_activity = message.date
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞—è–≤–∫–∞
        application = await session.query(Application).filter_by(user_id=user_id).first()
        
        if application:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–¥–∞–≤–∞–ª –∑–∞—è–≤–∫—É
            referral_link = f"https://t.me/{(await message.bot.get_me()).username}?start=ref{user_id}"
            
            await message.answer(
                messages.WELCOME_EXISTING_USER.format(referral_link=referral_link),
                reply_markup=get_reply_keyboard_existing_user()
            )
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_main_menu_existing_user()
            )
        else:
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞
            if referrer_id:
                referrer = (await session.execute(select(BotUser).where(BotUser.user_id == referrer_id))).scalar_one_or_none()
                if referrer:
                    referrer_name = referrer.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                    await message.answer(
                        f"üéÅ –í—ã –ø—Ä–∏—à–ª–∏ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –æ—Ç {referrer_name}!\n"
                        f"–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è 50% –∫—É—Ä—Å–∞ –≤—ã –æ–±–∞ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ 50‚Ç¨ üí∞"
                    )
            
            await message.answer(
                messages.WELCOME_NEW_USER,
                reply_markup=get_reply_keyboard_new_user()
            )
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_main_menu_new_user()
            )

@router.message(F.text == messages.BTN_MAIN_MENU)
async def main_menu(message: Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await state.clear()
    
    async with db_manager.get_session() as session:
        application = await session.query(Application).filter_by(
            user_id=message.from_user.id
        ).first()
        
        if application:
            await message.answer(
                "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                reply_markup=get_main_menu_existing_user()
            )
        else:
            await message.answer(
                "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                reply_markup=get_main_menu_new_user()
            )

@router.message(F.text == messages.BTN_ABOUT)
async def about_course(message: Message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ"""
    await message.answer(messages.ABOUT_COURSE)

@router.message(F.text == "üí∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞")
async def referral_link(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É"""
    user_id = message.from_user.id
    
    async with db_manager.get_session() as session:
        application = await session.query(Application).filter_by(user_id=user_id).first()
        
        if not application:
            await message.answer(
                "‚ùå –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∫—É—Ä—Å!"
            )
            return
        
        bot_username = (await message.bot.get_me()).username
        referral_link = f"https://t.me/{bot_username}?start=ref{user_id}"
        
        # –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        referrals_count = await session.query(Referral).filter_by(
            referrer_id=user_id
        ).count()
        
        await message.answer(
            f"üí∞ –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
            f"{referral_link}\n\n"
            f"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {referrals_count}\n\n"
            f"–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ 50‚Ç¨ –∑–∞ –∫–∞–∂–¥–æ–≥–æ!"
        )

@router.message(Command("help"))
async def cmd_help(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = """ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/apply - –ë—ã—Å—Ç—Ä–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ –∫—É—Ä—Å
/ref - –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
/program - –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞
/reviews - –û—Ç–∑—ã–≤—ã —É—á–µ–Ω–∏–∫–æ–≤
/help - –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @support"""
    
    await message.answer(help_text)
